{"ast":null,"code":"var _jsxFileName = \"/home/troias/udemy/project-4/01-starting-project/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nconst dummyMovies = [{\n  id: 1,\n  title: 'Some Dummy Movie',\n  openingText: 'This is the opening text of the movie',\n  releaseDate: '2021-05-18'\n}, {\n  id: 2,\n  title: 'Some Dummy Movie 2',\n  openingText: 'This is the second opening text of the movie',\n  releaseDate: '2021-05-19'\n}];\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\"); // useEffect(() =>{\n  //   fetchMovieshandler()\n  // }, [movies])\n\n  const fetchMovieshandler = async () => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      const req = await fetch('https://swapi.dev/api/film');\n\n      if (!response.ok) {\n        throw new Error('Something went wrong');\n      }\n\n      const response = await req.json();\n      const movies = response.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          releaseDate: movieData.release_date,\n          openingText: movieData.opening_crawl\n        };\n      });\n      setMovies(movies);\n      setLoading(false);\n    } catch (error) {\n      setError(error.message);\n    }\n\n    setLoading(false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMovieshandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, !loading && movies.length === 0 && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 46\n    }\n  }, \" Click to fetch movies \"), !loading && movies.length > 0 && /*#__PURE__*/React.createElement(MoviesList, {\n    movies: movies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 43\n    }\n  }), loading && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, \"Loading\"), !loading && error && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 31\n    }\n  }, \" \", error, \" \"), console.log(error)));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/troias/udemy/project-4/01-starting-project/src/App.js"],"names":["React","useEffect","useState","MoviesList","dummyMovies","id","title","openingText","releaseDate","App","movies","setMovies","loading","setLoading","error","setError","fetchMovieshandler","req","fetch","response","ok","Error","json","results","map","movieData","episode_id","release_date","opening_crawl","message","length","console","log"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\n  const dummyMovies = [\n    {\n      id: 1,\n      title: 'Some Dummy Movie',\n      openingText: 'This is the opening text of the movie',\n      releaseDate: '2021-05-18',\n    },\n    {\n      id: 2,\n      title: 'Some Dummy Movie 2',\n      openingText: 'This is the second opening text of the movie',\n      releaseDate: '2021-05-19',\n    },\n  ];\n\nfunction App() {\n\n  const [movies, setMovies] = useState([])\n  const [loading, setLoading]= useState(false)\n  const [ error, setError] = useState(\"\")\n\n  // useEffect(() =>{\n  //   fetchMovieshandler()\n  // }, [movies])\n\n  const fetchMovieshandler = async ()  => {\n    setLoading(true)\n    setError(null)\n    \n    try {\n    \n      const req = await fetch('https://swapi.dev/api/film')\n\n      if (!response.ok) {\n        throw new Error('Something went wrong')\n      }\n      \n      const response = await req.json()\n  \n  \n      const movies = response.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          releaseDate: movieData.release_date, \n          openingText: movieData.opening_crawl\n        }})\n        setMovies(movies)\n        setLoading(false)\n\n    } catch(error) {\n      setError(error.message)\n    \n    }\n    setLoading(false)\n\n\n  }\n\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMovieshandler}>Fetch Movies</button>\n      </section>\n      <section>\n         {!loading && movies.length === 0 && <p> Click to fetch movies </p>}\n        {!loading && movies.length > 0 && <MoviesList movies={movies} /> }\n        {loading && <p>Loading</p>}\n        {!loading && error && <p> {error} </p>}\n        {console.log(error)}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}