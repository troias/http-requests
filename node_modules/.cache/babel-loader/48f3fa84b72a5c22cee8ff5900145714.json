{"ast":null,"code":"var _jsxFileName = \"/home/troias/udemy/project-4/01-starting-project/src/App.js\";\nimport React, { useEffect, useState, useCallback } from 'react';\nimport AddMovie from './components/AddMovie';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const fetchMovieshandler = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      const req = await fetch('https://swapi.dev/api/films');\n\n      if (!req.ok) {\n        throw new Error('Something went wrong');\n      }\n\n      const response = await req.json();\n      const movies = response.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          releaseDate: movieData.release_date,\n          openingText: movieData.opening_crawl\n        };\n      });\n      setMovies(movies);\n      setLoading(false);\n    } catch (error) {\n      setError(error.message);\n    }\n\n    setLoading(false);\n  }, []);\n  useEffect(() => {\n    fetchMovieshandler();\n  }, [fetchMovieshandler]);\n\n  function addMovieHandler(movie) {\n    console.log(movie);\n  }\n\n  let content = /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, \" found no movies \");\n\n  if (movies.length > 0) {\n    content = /*#__PURE__*/React.createElement(MoviesList, {\n      movies: movies,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    });\n  }\n\n  if (error) {\n    content = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }\n    }, \" \", error, \" \");\n  }\n\n  if (loading) {\n    content = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }\n    }, \" loading \");\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AddMovie, {\n    onAddMovie: addMovieHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMovieshandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, content));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/troias/udemy/project-4/01-starting-project/src/App.js"],"names":["React","useEffect","useState","useCallback","AddMovie","MoviesList","App","movies","setMovies","loading","setLoading","error","setError","fetchMovieshandler","req","fetch","ok","Error","response","json","results","map","movieData","id","episode_id","title","releaseDate","release_date","openingText","opening_crawl","message","addMovieHandler","movie","console","log","content","length"],"mappings":"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","sourcesContent":["import React, {useEffect, useState, useCallback} from 'react';\nimport AddMovie from './components/AddMovie';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\n\nfunction App() {\n\n  const [movies, setMovies] = useState([])\n  const [loading, setLoading]= useState(false)\n  const [ error, setError] = useState(\"\")\n\n  const fetchMovieshandler = useCallback(async () => {\n    setLoading(true)\n    setError(null)\n    \n    try {\n      const req = await fetch('https://swapi.dev/api/films')\n      if (!req.ok) {\n        throw new Error('Something went wrong')\n      }\n      const response = await req.json()\n      const movies = response.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          releaseDate: movieData.release_date, \n          openingText: movieData.opening_crawl\n        }})\n        setMovies(movies)\n        setLoading(false)\n    } catch(error) {\n      setError(error.message)\n    \n    }\n    setLoading(false)\n  }, [])\n\n  useEffect(() =>{\n    fetchMovieshandler()\n  }, [fetchMovieshandler])\n\n  function addMovieHandler(movie) {\n    console.log(movie);\n  }\n\n  let content = <p> found no movies </p>\n\n  if (movies.length > 0) {\n    content = <MoviesList movies={movies} />\n  }\n  \n  if (error) {\n    content = <p> {error} </p>\n  }\n  \n  if (loading) {\n    content = <p> loading </p>\n  }\n\n\n  return (\n    <React.Fragment>\n      <section>\n      <AddMovie onAddMovie={addMovieHandler} />\n      </section>\n      <section>\n        <button onClick={fetchMovieshandler}>Fetch Movies</button>\n      </section>\n      <section>\n    {content}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}