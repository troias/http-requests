{"ast":null,"code":"var _jsxFileName = \"/home/troias/udemy/project-4/01-starting-project/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nconst dummyMovies = [{\n  id: 1,\n  title: 'Some Dummy Movie',\n  openingText: 'This is the opening text of the movie',\n  releaseDate: '2021-05-18'\n}, {\n  id: 2,\n  title: 'Some Dummy Movie 2',\n  openingText: 'This is the second opening text of the movie',\n  releaseDate: '2021-05-19'\n}];\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\"); // useEffect(() =>{\n  //   fetchMovieshandler()\n  // }, [movies])\n\n  const fetchMovieshandler = async () => {\n    setLoading(true);\n\n    try {\n      const req = await fetch('https://swapi.dev/api/films');\n      const response = await req.json();\n      const movies = response.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          releaseDate: movieData.release_date,\n          openingText: movieData.opening_crawl\n        };\n      });\n      setMovies(movies);\n      setLoading(false);\n    } catch (error) {\n      setError(error);\n      setLoading(false);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMovieshandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, !loading && movies.length === 0 && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 46\n    }\n  }, \" Found no movies \"), !loading && movies.length > 0 && /*#__PURE__*/React.createElement(MoviesList, {\n    movies: movies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 43\n    }\n  }), loading && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, \"Loading\"), error && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 19\n    }\n  }, error.message)));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/troias/udemy/project-4/01-starting-project/src/App.js"],"names":["React","useEffect","useState","MoviesList","dummyMovies","id","title","openingText","releaseDate","App","movies","setMovies","loading","setLoading","error","setError","fetchMovieshandler","req","fetch","response","json","results","map","movieData","episode_id","release_date","opening_crawl","length","message"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;AAEE,MAAMC,WAAW,GAAG,CAClB;AACEC,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,KAAK,EAAE,kBAFT;AAGEC,EAAAA,WAAW,EAAE,uCAHf;AAIEC,EAAAA,WAAW,EAAE;AAJf,CADkB,EAOlB;AACEH,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,KAAK,EAAE,oBAFT;AAGEC,EAAAA,WAAW,EAAE,8CAHf;AAIEC,EAAAA,WAAW,EAAE;AAJf,CAPkB,CAApB;;AAeF,SAASC,GAAT,GAAe;AAEb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAuBX,QAAQ,CAAC,KAAD,CAArC;AACA,QAAM,CAAEY,KAAF,EAASC,QAAT,IAAqBb,QAAQ,CAAC,EAAD,CAAnC,CAJa,CAMb;AACA;AACA;;AAEA,QAAMc,kBAAkB,GAAG,YAAa;AACtCH,IAAAA,UAAU,CAAC,IAAD,CAAV;;AAEA,QAAI;AACF,YAAMI,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAAvB;AACA,YAAMC,QAAQ,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAvB;AAEA,YAAMV,MAAM,GAAGS,QAAQ,CAACE,OAAT,CAAiBC,GAAjB,CAAqBC,SAAS,IAAI;AAC/C,eAAO;AACLlB,UAAAA,EAAE,EAAEkB,SAAS,CAACC,UADT;AAELlB,UAAAA,KAAK,EAAEiB,SAAS,CAACjB,KAFZ;AAGLE,UAAAA,WAAW,EAAEe,SAAS,CAACE,YAHlB;AAILlB,UAAAA,WAAW,EAAEgB,SAAS,CAACG;AAJlB,SAAP;AAKE,OANW,CAAf;AAOEf,MAAAA,SAAS,CAACD,MAAD,CAAT;AACAG,MAAAA,UAAU,CAAC,KAAD,CAAV;AAEH,KAdD,CAcE,OAAMC,KAAN,EAAa;AACbC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACAD,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AAQF,GA5BD;;AA+BA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAEG,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,CAACJ,OAAD,IAAYF,MAAM,CAACiB,MAAP,KAAkB,CAA9B,iBAAmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADvC,EAEG,CAACf,OAAD,IAAYF,MAAM,CAACiB,MAAP,GAAgB,CAA5B,iBAAiC,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAEjB,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFpC,EAGGE,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHd,EAIGE,KAAK,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,KAAK,CAACc,OAAV,CAJZ,CAJF,CADF;AAaD;;AAED,eAAenB,GAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\n  const dummyMovies = [\n    {\n      id: 1,\n      title: 'Some Dummy Movie',\n      openingText: 'This is the opening text of the movie',\n      releaseDate: '2021-05-18',\n    },\n    {\n      id: 2,\n      title: 'Some Dummy Movie 2',\n      openingText: 'This is the second opening text of the movie',\n      releaseDate: '2021-05-19',\n    },\n  ];\n\nfunction App() {\n\n  const [movies, setMovies] = useState([])\n  const [loading, setLoading]= useState(false)\n  const [ error, setError] = useState(\"\")\n\n  // useEffect(() =>{\n  //   fetchMovieshandler()\n  // }, [movies])\n\n  const fetchMovieshandler = async ()  => {\n    setLoading(true)\n\n    try {\n      const req = await fetch('https://swapi.dev/api/films')\n      const response = await req.json()\n  \n      const movies = response.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          releaseDate: movieData.release_date, \n          openingText: movieData.opening_crawl\n        }})\n        setMovies(movies)\n        setLoading(false)\n\n    } catch(error) {\n      setError(error)\n      setLoading(false)\n    }\n  \n     \n    \n     \n    \n  \n\n  }\n\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMovieshandler}>Fetch Movies</button>\n      </section>\n      <section>\n         {!loading && movies.length === 0 && <p> Found no movies </p>}\n        {!loading && movies.length > 0 && <MoviesList movies={movies} /> }\n        {loading && <p>Loading</p>}\n        {error && <p>{error.message}</p>}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}